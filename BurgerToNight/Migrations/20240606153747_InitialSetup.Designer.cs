// <auto-generated />
using System;
using BurgerToNight.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BurgerToNight.Migrations
{
    [DbContext(typeof(BurgerDbContext))]
    [Migration("20240606153747_InitialSetup")]
    partial class InitialSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BurgerToNight.Models.BurgerCategroy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "BBQ burger are made with highly care and in check environment",
                            Title = "BBQ"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Grilled burger Patty are made in hygenic and clean Oven",
                            Title = "Grilled"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Crunch buger patty are made With best breadcrumbs and fresh and clean oil",
                            Title = "Crunch"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Our most favourite and yet the best one!",
                            Title = "Special"
                        });
                });

            modelBuilder.Entity("BurgerToNight.Models.BurgerProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BurgerCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PreparingTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BurgerCategoryId");

                    b.ToTable("BProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BurgerCategoryId = 3,
                            Description = "",
                            Name = "Mighty Zinger",
                            Price = 20
                        },
                        new
                        {
                            Id = 2,
                            BurgerCategoryId = 2,
                            Description = "",
                            Name = "Big Ben",
                            Price = 18
                        },
                        new
                        {
                            Id = 3,
                            BurgerCategoryId = 4,
                            Description = "",
                            Name = "Big Bang",
                            Price = 40
                        },
                        new
                        {
                            Id = 4,
                            BurgerCategoryId = 1,
                            Description = "",
                            Name = "Super BBQ",
                            Price = 30
                        });
                });

            modelBuilder.Entity("BurgerToNight.Models.BurgerProduct", b =>
                {
                    b.HasOne("BurgerToNight.Models.BurgerCategroy", "BurgerCategroy")
                        .WithMany()
                        .HasForeignKey("BurgerCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BurgerCategroy");
                });
#pragma warning restore 612, 618
        }
    }
}
